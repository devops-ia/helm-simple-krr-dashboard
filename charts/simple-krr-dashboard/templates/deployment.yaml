apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "simple-krr-dashboard.fullname" . }}
  labels:
    {{- include "simple-krr-dashboard.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.annotations }}
   annotations:
     {{- toYaml . | nindent 4 }}
   {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "simple-krr-dashboard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "simple-krr-dashboard.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "simple-krr-dashboard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort | default .Values.service.port }}
              protocol: TCP
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- if .Values.livenessProbeCustom }}
            {{- toYaml .Values.livenessProbeCustom | nindent 12 }}
            {{- else }}
            httpGet:
              path: {{ .Values.service.healthPath | default "/" | quote }}
              port: {{ .Values.service.targetPort | default .Values.service.port }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            {{- end }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- if .Values.readinessProbeCustom }}
            {{- toYaml .Values.readinessProbeCustom | nindent 12 }}
            {{- else }}
            httpGet:
              path: {{ .Values.service.healthPath | default "/" | quote }}
              port: {{ .Values.service.targetPort | default .Values.service.port }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            {{- end }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            {{- if .Values.startupProbeCustom }}
            {{- toYaml .Values.startupProbeCustom | nindent 12 }}
            {{- else }}
            httpGet:
              path: {{ .Values.service.healthPath | default "/" | quote }}
              port: {{ .Values.service.targetPort | default .Values.service.port }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            {{- end }}
          {{- end }}
          envFrom:
            {{- if .Values.envFromFiles }}
            {{- tpl (toYaml .Values.envFromFiles) . | nindent 12 }}
            {{- end }}
          env:
            {{- $envList := dict }}
            - name: APP_VERSION
              value: {{ .Chart.AppVersion | quote }}
            {{- $_ := set $envList "APP_NAME" true }}
            {{- if .Values.envFromSecrets }}
            {{- range $key, $value := .Values.envFromSecrets }}
            {{- if not (hasKey $envList $key) }}
            - name: {{ $key | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value.name }}
                  key: {{ $value.key | default $key }}
            {{- $_ := set $envList $key true }}
            {{- end }}
            {{- end }}
            {{- end }}
            # Variables from configmap have precedence
            {{- if .Values.envFromConfigMap }}
            {{- range $key, $value := .Values.envFromConfigMap }}
            {{- if not (hasKey $envList $key) }}
            - name: {{ $key | upper }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $value.name }}
                  key: {{ $value.key | default $key }}
            {{- $_ := set $envList $key true }}
            {{- end }}
            {{- end }}
            {{- end }}
            # Add variables in plain text if they were not already added from secrets
            {{- if .Values.env }}
            {{- range $key, $value := .Values.env }}
            {{- if not (hasKey $envList $key) }}
            - name: {{ $key | upper }}
              value: {{ $value | quote }}
            {{- $_ := set $envList $key true }}
            {{- end }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      {{- $_ := include "simple-krr-dashboard.patchTopologySpreadConstraints" $ }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
